name: Backend Continuous Integration

on:
  pull_request:
    branches:
      - main
    paths:
      - 'starter/backend/**'
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ECR_REPO: backend
  EKS_CLUSTER_NAME: cluster
  PYTHON_VERSION: "3.9"


jobs: 
  Lint-Job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: python environment setup
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip' # caching pip dependencies

      - name: Install Pip dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r starter/backend/requirements.txt

      - name: code linting
        uses: py-actions/flake8@v2
        with:
          ignore: "E501"

  Test-Job: 
    runs-on: ubuntu-latest
    env: 
      PYTHON_VERSION: "3.9"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: python environment setup
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip' # caching pip dependencies

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r starter/backend/requirements.txt

      # Run the tests
      - name: Test with pytest
        run: |
          pip install pytest
          cd starter/backend && pytest

  Build-Job: 
    runs-on: ubuntu-latest
    needs: [Lint-Job, Test-Job]
    env: 
      PYTHON_VERSION: "3.9"
    steps: 
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
    
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r starter/backend/requirements.txt

      - name: Tests
        id: tests
        run: cd starter/backend && pytest

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}

      # AWS ECR Login
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        
      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ env.ECR_REPO }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG ./starter/backend
        if: success()   # error handling
